{"ast":null,"code":"var _jsxFileName = \"/Users/selim/Desktop/New Begining/REACT/poketimes/src/components/Post.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nclass Post extends Component {\n  // state={\n  //     post: null\n  // }\n  // componentDidMount(){\n  //     let id = this.props.match.params.post_id;\n  //     axios.get('https://jsonplaceholder.typicode.com/posts/' + id)\n  //         .then(res=>{\n  //             this.setState({\n  //                 post: res.data\n  //             })\n  //         })\n  // }\n  render() {\n    const post = this.props.post ? React.createElement(\"div\", {\n      className: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, this.state.post.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.state.post.body)) : React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Loading post...\");\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, post);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  let id = ownProps.match.params.post_id;\n  return {\n    post: state.posts.find(post => post.id === id)\n  };\n};\n\nexport default connect(mapStateToProps)(Post);","map":{"version":3,"sources":["/Users/selim/Desktop/New Begining/REACT/poketimes/src/components/Post.js"],"names":["React","Component","axios","connect","Post","render","post","props","state","title","body","mapStateToProps","ownProps","id","match","params","post_id","posts","find"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA4B;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAI,EAAAA,MAAM,GAAE;AACJ,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAX,GACT;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,KAAKE,KAAL,CAAWF,IAAX,CAAgBG,KAAxC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKD,KAAL,CAAWF,IAAX,CAAgBI,IAApB,CAFJ,CADS,GAMT;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBANJ;AAQA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMJ,IADN,CADJ;AAKH;;AA3BuB;;AA8B5B,MAAMK,eAAe,GAAG,CAACH,KAAD,EAAQI,QAAR,KAAoB;AACxC,MAAIC,EAAE,GAAGD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBC,OAA/B;AACA,SAAM;AACFV,IAAAA,IAAI,EAAEE,KAAK,CAACS,KAAN,CAAYC,IAAZ,CAAiBZ,IAAI,IAAIA,IAAI,CAACO,EAAL,KAAUA,EAAnC;AADJ,GAAN;AAGH,CALD;;AAMA,eAAeV,OAAO,CAACQ,eAAD,CAAP,CAAyBP,IAAzB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nclass Post extends Component{\n    // state={\n    //     post: null\n    // }\n    // componentDidMount(){\n    //     let id = this.props.match.params.post_id;\n    //     axios.get('https://jsonplaceholder.typicode.com/posts/' + id)\n    //         .then(res=>{\n    //             this.setState({\n    //                 post: res.data\n    //             })\n    //         })\n    // }\n    render(){\n        const post = this.props.post ? (\n            <div className=\"post\">\n                <h4 className=\"center\">{this.state.post.title}</h4>\n                <p>{this.state.post.body}</p>\n            </div>\n        ) : (\n            <div className=\"center\">Loading post...</div>\n        )\n        return(\n            <div className=\"container\">\n                { post }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) =>{\n    let id = ownProps.match.params.post_id;\n    return{\n        post: state.posts.find(post => post.id===id)\n    }\n}\nexport default connect(mapStateToProps)(Post);"]},"metadata":{},"sourceType":"module"}